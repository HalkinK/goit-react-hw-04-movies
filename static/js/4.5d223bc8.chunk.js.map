{"version":3,"sources":["services/moviesApi.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/HomePage/HomePage.js"],"names":["API_KEY","BASE_URL","fetchMovies","url","a","config","fetch","responce","ok","json","then","data","results","Promise","reject","Error","api","fetchMoviesTrend","page","trendMoviesUrl","fetchMoviesByQuery","searchQuery","searchQueryUrl","fetchMovieDetails","movieId","axios","get","response","fetchMovieCast","movie_id","castUrl","cast","fetchMovieReviews","reviewsUrl","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","HomePage","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","map","poster_path","title","id","to","pathname","state","src","alt","width","height"],"mappings":"uLAEMA,EAAU,mCACVC,EAAW,+B,SAgBFC,E,8EAAf,WAA2BC,GAA3B,6BAAAC,EAAA,6DAAgCC,EAAhC,+BAAyC,GAAzC,SACyBC,MAAMH,EAAKE,GADpC,YACQE,EADR,QAGkBC,GAHlB,iCAIYD,EAASE,OAAOC,MAAK,SAACC,GAAD,OAAUA,EAAKC,WAJhD,gDAKMC,QAAQC,OAAO,IAAIC,MAAM,cAL/B,oF,sBAuCA,IAAMC,EAAM,CACVC,iBAhCF,WAAqC,IAAXC,EAAU,uDAAH,EACzBC,EAAc,UAAMlB,EAAN,uCAA6CD,EAA7C,gCAA4EkB,GAEhG,OAAOhB,EAAYiB,IA8BnBC,mBA3BF,SAA4BC,GAAwB,IAAXH,EAAU,uDAAH,EACxCI,EAAc,UAAMrB,EAAN,iCAAuCD,EAAvC,gCAAsEkB,EAAtE,kBAAoFG,GACxG,OAAOnB,EAAYoB,IA0BnBC,kBAhDK,SAA2BC,GAChC,OAAOC,IACJC,IADI,UACGzB,EADH,kBACqBuB,EADrB,oBACwCxB,EADxC,oBAEJU,MAAK,SAACiB,GAAD,OAAcA,EAAShB,SA8C/BiB,eAhBF,SAAwBC,GACtB,IAAMC,EAAO,UAAM7B,EAAN,kBAAwB4B,EAAxB,4BAAoD7B,EAApD,mBACb,OAAOM,MAAMwB,GACVpB,MAAK,SAACH,GAAD,OAAcA,EAASE,UAC5BC,MAAK,SAACC,GAAD,OAAUA,EAAKoB,SAavBC,kBAVF,SAA2BH,GAAqB,IAAXX,EAAU,uDAAH,EACpCe,EAAU,UAAMhC,EAAN,kBAAwB4B,EAAxB,4BAAoD7B,EAApD,gCAAmFkB,GACnG,OAAOhB,EAAY+B,KAWNjB,O,uGC9DA,SAASkB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,gDID/E,SAASC,IACtB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAWC,cAajB,OAXAC,qBAAU,WAENpC,IACGC,mBACAP,MAAK,SAACC,GAAD,OACJsC,GAAkB,SAACD,GAAD,kBAAwBA,GAAxB,EAA2CrC,YAIlE,IAGD,qCACE,gDACA,6BACGqC,EAAeK,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,GAAvB,OAClB,6BACE,eAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaF,GACrBG,MAAO,CACLhB,KAAMO,EAASQ,WAJrB,UAQE,qBACEE,IAAG,UA7BF,mCA6BE,OAAcN,GACjBO,IAAG,UAAKN,GACRO,MAAM,MACNC,OAAO,QAET,6BAAKR,QAfAC","file":"static/js/4.5d223bc8.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"612ad9e57f61526bfd55d457eca2466c\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\n// function fetchMovies(url) {\n//   const URL = url;\n\n//   return fetch(URL)\n//     .then((responce) => responce.json())\n//     .then((data) => data.results);\n// }\n\nexport function fetchMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    .then((response) => response.data);\n}\n\nasync function fetchMovies(url, config = {}) {\n  const responce = await fetch(url, config);\n\n  return responce.ok\n    ? await responce.json().then((data) => data.results)\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nfunction fetchMoviesTrend(page = 1) {\n  const trendMoviesUrl = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n  return fetchMovies(trendMoviesUrl);\n}\n\nfunction fetchMoviesByQuery(searchQuery, page = 1) {\n  const searchQueryUrl = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${searchQuery}`;\n  return fetchMovies(searchQueryUrl);\n  // .responce.json()\n  // .then((data) => data.results);\n}\n\n// function fetchMovieDetails(movie_id) {\n//   const detailsUrl = `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n//   return fetchMovies(detailsUrl);\n//   //   return fetch(detailsUrl).then((response) => response.data);\n// }\n\nfunction fetchMovieCast(movie_id) {\n  const castUrl = `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`;\n  return fetch(castUrl)\n    .then((responce) => responce.json())\n    .then((data) => data.cast);\n}\n\nfunction fetchMovieReviews(movie_id, page = 1) {\n  const reviewsUrl = `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`;\n  return fetchMovies(reviewsUrl);\n}\n\nconst api = {\n  fetchMoviesTrend,\n  fetchMoviesByQuery,\n  fetchMovieDetails,\n  fetchMovieCast,\n  fetchMovieReviews,\n};\n\nexport default api;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport api from \"../../services/moviesApi\";\n\nexport default function HomePage() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const imgUrl = \"https://image.tmdb.org/t/p/w500\";\n  const location = useLocation();\n\n  useEffect(() => {\n    const renderTrendingMovies = () => {\n      api\n        .fetchMoviesTrend()\n        .then((data) =>\n          setTrendingMovies((trendingMovies) => [...trendingMovies, ...data])\n        );\n    };\n    renderTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      <ul>\n        {trendingMovies.map(({ poster_path, title, id }) => (\n          <li key={id}>\n            <Link\n              to={{\n                pathname: `/movies/${id}`,\n                state: {\n                  from: location.pathname,\n                },\n              }}\n            >\n              <img\n                src={`${imgUrl}${poster_path}`}\n                alt={`${title}`}\n                width=\"200\"\n                height=\"200\"\n              />\n              <h2>{title}</h2>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n"],"sourceRoot":""}