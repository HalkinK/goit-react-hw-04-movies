{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","api","fetchMovieReviews","then","length","map","id","author","content"],"mappings":"iOAIe,SAASA,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAA8BE,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KASA,OAPAC,qBAAU,WAENC,IAAIC,kBAAkBP,GAASQ,KAAKJ,KAGrC,CAACJ,IAGF,mCACGG,GAAWA,EAAQM,OAAS,EAC3B,6BACGN,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,+BACE,6BAAKD,IACL,+BAAOC,MAFAF,QAOb","file":"static/js/9.a617baad.chunk.js","sourcesContent":["import { useParams } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport api from \"../../services/moviesApi\";\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    const renderMovieReviews = () => {\n      api.fetchMovieReviews(movieId).then(setReviews);\n    };\n    renderMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <span>{content}</span>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <span>We don't have reviews for this movie.</span>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}